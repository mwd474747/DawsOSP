# Alertmanager Configuration
# Purpose: Route alerts to appropriate channels
# Updated: 2025-10-26

global:
  resolve_timeout: 5m

# Alert routing tree
route:
  group_by: ['alertname', 'severity']
  group_wait: 10s
  group_interval: 5m
  repeat_interval: 4h
  receiver: 'default'

  routes:
    # Critical alerts -> immediate notification
    - match:
        severity: critical
      receiver: 'critical'
      continue: true

    # Warning alerts -> batched notifications
    - match:
        severity: warning
      receiver: 'warning'
      group_wait: 30s
      group_interval: 15m

    # Info alerts -> low priority
    - match:
        severity: info
      receiver: 'info'
      group_interval: 1h

# Receivers (notification channels)
receivers:
  # Default receiver (logs only)
  - name: 'default'
    # Add webhook/email/Slack here
    # webhook_configs:
    #   - url: 'http://your-webhook-url'

  # Critical alerts (immediate action required)
  - name: 'critical'
    # PagerDuty integration example:
    # pagerduty_configs:
    #   - service_key: '<PAGERDUTY_SERVICE_KEY>'
    #     severity: '{{ .CommonLabels.severity }}'
    #     description: '{{ .CommonAnnotations.summary }}'

    # Slack integration example:
    # slack_configs:
    #   - api_url: '<SLACK_WEBHOOK_URL>'
    #     channel: '#dawsos-critical'
    #     title: 'üö® CRITICAL: {{ .CommonAnnotations.summary }}'
    #     text: '{{ .CommonAnnotations.description }}'
    #     color: danger

  # Warning alerts
  - name: 'warning'
    # Slack integration example:
    # slack_configs:
    #   - api_url: '<SLACK_WEBHOOK_URL>'
    #     channel: '#dawsos-alerts'
    #     title: '‚ö†Ô∏è WARNING: {{ .CommonAnnotations.summary }}'
    #     text: '{{ .CommonAnnotations.description }}'
    #     color: warning

  # Info alerts
  - name: 'info'
    # Email integration example:
    # email_configs:
    #   - to: 'team@example.com'
    #     from: 'alertmanager@dawsos.internal'
    #     smarthost: 'smtp.example.com:587'
    #     auth_username: 'alertmanager'
    #     auth_password: '<PASSWORD>'

# Inhibit rules (suppress certain alerts when others are firing)
inhibit_rules:
  # Suppress warning alerts if critical alert is firing
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'pattern_id']

  # Suppress low error rate alert if critical error rate is firing
  - source_match:
      alertname: 'CriticalErrorRate'
    target_match:
      alertname: 'HighErrorRate'
