version: '3.8'

services:
  dawsos:
    build: .
    container_name: dawsos
    restart: unless-stopped
    ports:
      - "8501:8501"
    environment:
      # API Keys - Replace with your actual keys or use .env file
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - FMP_API_KEY=${FMP_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - FRED_API_KEY=${FRED_API_KEY}
      - NEWSAPI_KEY=${NEWSAPI_KEY}
      # Streamlit configuration
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_THEME_BASE=dark
    volumes:
      # Persist data between container restarts
      - ./storage:/app/storage
      - ./logs:/app/logs
      # Optional: Mount .env file if using local env
      - ./.env:/app/.env:ro
    networks:
      - dawsos-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for distributed caching
  redis:
    image: redis:7-alpine
    container_name: dawsos-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - dawsos-network
    command: redis-server --appendonly yes

  # Optional: PostgreSQL for production data storage
  postgres:
    image: postgres:15-alpine
    container_name: dawsos-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=dawsos
      - POSTGRES_USER=dawsos
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dawsos123}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - dawsos-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dawsos"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  dawsos-network:
    driver: bridge

volumes:
  redis-data:
  postgres-data: