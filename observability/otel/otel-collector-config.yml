# OpenTelemetry Collector Configuration for DawsOS
# Purpose: Collect, process, and export telemetry data
# Updated: 2025-10-27

receivers:
  # OTLP receiver for traces, metrics, and logs
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  # Prometheus receiver to scrape metrics from backend
  prometheus:
    config:
      scrape_configs:
        - job_name: 'dawsos-backend'
          scrape_interval: 15s
          static_configs:
            - targets: ['backend:8000']

processors:
  # Batch processor - improves performance
  batch:
    timeout: 10s
    send_batch_size: 1024
    send_batch_max_size: 2048

  # Memory limiter - prevents OOM
  memory_limiter:
    check_interval: 1s
    limit_mib: 512
    spike_limit_mib: 128

  # Resource processor - add common attributes
  resource:
    attributes:
      - key: service.name
        value: dawsos
        action: upsert
      - key: environment
        value: development
        action: upsert
      - key: cluster
        value: dawsos-dev
        action: upsert

  # Sampling processor for traces (optional)
  probabilistic_sampler:
    sampling_percentage: 100  # 100% for development, lower in production

  # Filter processor - remove noisy metrics (optional)
  filter:
    metrics:
      exclude:
        match_type: regexp
        metric_names:
          - .*health.*
          - .*ping.*

exporters:
  # Jaeger exporter for traces
  otlp/jaeger:
    endpoint: jaeger:4317
    tls:
      insecure: true

  # Prometheus exporter for metrics
  prometheus:
    endpoint: "0.0.0.0:8888"
    namespace: dawsos
    const_labels:
      service: dawsos

  # Logging exporter for debugging
  logging:
    verbosity: detailed
    sampling_initial: 5
    sampling_thereafter: 200

  # File exporter for traces (optional)
  # file:
  #   path: /var/log/otel/traces.json

extensions:
  # Health check extension
  health_check:
    endpoint: 0.0.0.0:13133

  # pprof extension for performance profiling
  pprof:
    endpoint: 0.0.0.0:1777

  # zpages extension for debugging
  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [health_check, pprof, zpages]

  pipelines:
    # Traces pipeline
    traces:
      receivers: [otlp]
      processors: [memory_limiter, resource, probabilistic_sampler, batch]
      exporters: [otlp/jaeger, logging]

    # Metrics pipeline
    metrics:
      receivers: [otlp, prometheus]
      processors: [memory_limiter, resource, filter, batch]
      exporters: [prometheus, logging]

    # Logs pipeline (optional)
    logs:
      receivers: [otlp]
      processors: [memory_limiter, resource, batch]
      exporters: [logging]

  # Telemetry for the collector itself
  telemetry:
    logs:
      level: info
    metrics:
      level: detailed
      address: 0.0.0.0:8888
