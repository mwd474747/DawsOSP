# Pre-commit hooks for DawsOS Trinity Architecture compliance
# Install: pip install pre-commit
# Setup: pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # Trinity Architecture Compliance Checker
  - repo: local
    hooks:
      - id: trinity-compliance
        name: Trinity Architecture Compliance Check
        entry: python3 scripts/check_compliance.py
        language: system
        types: [python]
        pass_filenames: false
        always_run: true
        args: ['--strict']
        stages: [commit]

  # Pattern Linter (if exists)
  - repo: local
    hooks:
      - id: pattern-lint
        name: Pattern Configuration Linter
        entry: bash -c 'if [ -f scripts/lint_patterns.py ]; then python3 scripts/lint_patterns.py; fi'
        language: system
        files: 'patterns/.*\.json$'
        pass_filenames: false
        stages: [commit]

  # Python code formatting with Black
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        args: ['--line-length=100']
        files: '^dawsos/.*\.py$'

  # Python import sorting with isort
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ['--profile', 'black', '--line-length', '100']
        files: '^dawsos/.*\.py$'

  # Flake8 for Python linting
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: ['--max-line-length=100', '--extend-ignore=E203,W503']
        files: '^dawsos/.*\.py$'

  # Pytest on changed files (fast subset)
  - repo: local
    hooks:
      - id: pytest-changed
        name: Run pytest on changed files
        entry: bash -c 'if [ -f dawsos/test_system_health.py ]; then python3 -m pytest dawsos/test_system_health.py -v --tb=short; fi'
        language: system
        types: [python]
        pass_filenames: false
        stages: [commit]

  # Check for common issues
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        files: '^dawsos/.*\.(py|json|yaml|md)$'
      - id: end-of-file-fixer
        files: '^dawsos/.*\.(py|json|yaml|md)$'
      - id: check-yaml
        files: '^dawsos/.*\.yaml$'
      - id: check-json
        files: '^dawsos/.*\.json$'
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: debug-statements

  # Security checks with Bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        args: ['-c', 'pyproject.toml', '--severity-level', 'medium']
        files: '^dawsos/.*\.py$'
        exclude: '^dawsos/(tests|venv)/.*$'

  # Type checking with mypy (optional)
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        files: '^dawsos/core/.*\.py$'
        args: ['--ignore-missing-imports', '--no-strict-optional']
        additional_dependencies: ['types-requests']
